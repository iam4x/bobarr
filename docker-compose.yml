version: "3.6"

volumes:
  web_build:
  api_build:
  api_node_modules:
  web_node_modules:
  db_data:
  redis_data:

networks:
  default:

services:
  api:
    container_name: bobarr-api
    env_file: .env
    image: iam4x/bobarr-api:latest
    command: yarn start:prod
    restart: unless-stopped
    volumes:
      - ./library:/usr/library
    ports:
      - 4000:4000

  web:
    container_name: bobarr-web
    env_file: .env
    image: iam4x/bobarr-web:latest
    command: yarn start
    restart: unless-stopped
    ports:
      - 3000:3000

  postgres:
    container_name: bobarr-postgresql
    image: postgres:12-alpine
    env_file: .env
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    container_name: bobarr-redis
    image: bitnami/redis:5.0.6
    env_file: .env
    restart: unless-stopped
    volumes:
      - redis_data:/bitnami/redis/data

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: bobarr-flaresolverr
    environment:
      - LOG_LEVEL=info
    restart: unless-stopped
    ports:
      - 8191:8191

  transmission:
    image: linuxserver/transmission
    container_name: bobarr-transmission
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./library/downloads:/downloads
      - ./packages/transmission/config:/config
      - ./packages/transmission/watch:/watch

  transmission-web:
    image: dperson/nginx
    container_name: bobarr-transmission-web
    depends_on:
      - transmission
    environment:
      - TZ=Europe/Paris
    ports:
      - "9091:80"
    command: -w "http://transmission:9091;/"
    restart: unless-stopped
