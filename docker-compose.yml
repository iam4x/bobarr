version: "3.4"

volumes:
  db_data:
  redis_data:
  api_node_modules:
  web_node_modules:
  web_build:

networks:
  default:

services:
  api:
    container_name: bobarr-api
    build:
      context: ./packages/api
    env_file: .env
    volumes:
      - ./packages/api:/usr/src/app
      - ./library:/usr/library
      - api_node_modules:/usr/src/app/node_modules
    ports:
      - 4000:4000
      - 9229:9229
    links:
      - vpn:transmission
    networks:
      - default
    depends_on:
      - postgres
      - redis
      - jackett
      - transmission
      - transmission-web
    command: yarn start:prod
    # command: yarn dev
    restart: unless-stopped

  web:
    container_name: bobarr-web
    build:
      context: ./packages/web
    env_file: .env
    volumes:
      - ./packages/web:/usr/src/app
      - web_node_modules:/usr/src/app/node_modules
      - web_build:/usr/src/app/.next
    ports:
      - 3000:3000
    depends_on:
      - api
    command: yarn start
    # command: yarn dev
    restart: unless-stopped

  postgres:
    container_name: bobarr-postgresql
    image: postgres:12-alpine
    env_file: .env
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: bobarr-jacket
    env_file: .env
    volumes:
      - ./packages/jackett/config:/config
      - ./packages/jackett/downloads:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped

  redis:
    container_name: bobarr-redis
    image: bitnami/redis:5.0.6
    ports:
      - 6379:6379
    env_file: .env
    restart: unless-stopped
    volumes:
      - redis_data:/bitnami/redis/data

  vpn:
    image: dperson/openvpn-client
    container_name: bobarr-vpn
    cap_add:
      - net_admin
    security_opt:
      - label:disable
    networks:
      - default
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - /dev/net:/dev/net:z
      - ./packages/vpn:/vpn
    command: '-p "49150" -p "49150;udp"'
    restart: unless-stopped

  transmission:
    image: linuxserver/transmission
    container_name: bobarr-transmission
    depends_on:
      - vpn
    network_mode: "service:vpn"
    env_file: .env
    volumes:
      - ./library/downloads:/downloads
      - ./packages/transmission/config:/config
      - ./packages/transmission/watch:/watch

  transmission-web:
    image: dperson/nginx
    container_name: bobarr-transmission-web
    depends_on:
      - transmission
    environment:
      - TZ=Europe/Paris
    links:
      - vpn:transmission
    networks:
      - default
    ports:
      - "9091:80"
    command: -w "http://transmission:9091;/"
    restart: unless-stopped

  plex:
    image: plexinc/pms-docker:${PMSTAG}
    restart: unless-stopped
    ports:
      - 32400:32400 # for access to the Plex Media Server - required
    #      - 1900:1900/udp # for access to the Plex DLNA Server
    #      - 3005:3005 # for controlling Plex Home Theater via Plex Companion
    #      - 5353:5353/udp # for older Bonjour/Avahi network discovery
    #      - 8324:8324 # for controlling Plex for Roku via Plex Companion
    #      - 32410:32410/udp # for current GDM network discovery
    #      - 32412:32412/udp # for current GDM network discovery
    #      - 32413:32413/udp # for current GDM network discovery
    #      - 32414:32414/udp # for current GDM network discovery
    #      - 32469:32469 # for access to the Plex DLNA Server
    env_file: .env
    volumes:
      - ./packages/plex/config:/config
      - ./library/tvshows:/data/tv
      - ./library/movies:/data/movies
